CREATE TABLE DATOS_CLINICOS (
    ID_DATOS VARCHAR(100) NOT NULL,
    DIABETES BOOLEAN NOT NULL DEFAULT FALSE,
    ASMA BOOLEAN NOT NULL DEFAULT FALSE,
    HIPERTENSION BOOLEAN NOT NULL DEFAULT FALSE,
    CANCER BOOLEAN NOT NULL DEFAULT FALSE,
    OTROS BOOLEAN NOT NULL DEFAULT FALSE,
    PRIMARY KEY (ID_DATOS)
);

CREATE TABLE ENFERMEDADES_PERSONALES (
    ID_ENFERMEDADES_PERSONALES VARCHAR(100) NOT NULL,
    ENFERMEDADES_PADECIDA TEXT,
    ENFERMEDADES_PADECIDA_ACTUAL TEXT,
    MEDICAMENTOS_TOMADO_ACTUAL TEXT,
    METODO_PLANIFICACION_MUJER TEXT,
    PRIMARY KEY (ID_ENFERMEDADES_PERSONALES)
);

CREATE TABLE USO_PROTESIS (
    ID_PROTESIS VARCHAR(100) NOT NULL,
    DENTALES BOOLEAN NOT NULL DEFAULT FALSE,
    LENTES_CONTACTO BOOLEAN NOT NULL DEFAULT FALSE,
    NINGUNO BOOLEAN NOT NULL DEFAULT FALSE,
    PRIMARY KEY (ID_PROTESIS)
);

CREATE TABLE HABITOS_ALIMENTICIOS (
    ID_HABITOS_ALIMENTICIOS VARCHAR(100) NOT NULL,
    ALIMENTACION_ADECUADA BOOLEAN NOT NULL DEFAULT FALSE,
    AGUA BOOLEAN NOT NULL DEFAULT FALSE,
    FUMA BOOLEAN NOT NULL DEFAULT FALSE,
    ALCOHOL BOOLEAN NOT NULL DEFAULT FALSE,
    EJERCICIO BOOLEAN NOT NULL DEFAULT FALSE,
    HORA_SUENO TEXT,
    PRIMARY KEY (ID_HABITOS_ALIMENTICIOS)
);

CREATE TABLE ANALISIS_ESTETICO (
    ID_ANALISIS_ESTETICO VARCHAR(100) NOT NULL,
    COLOR_PIEL VARCHAR(100),
    TIPO_PIEL ENUM('NORMAL', 'PIEL MIXTA', 'PIEL SECA', 'PIEL GRASA', 'PIEL SENSIBLE') DEFAULT 'NORMAL',
    GRADO_DESHIDRATACION ENUM('LEVE', 'MEDIO', 'ALTO') DEFAULT 'LEVE',
    PATOLOGIAS_CUTANEAS ENUM('AMPOLLAS', 'COMEDONES', 'VERRUGAS', 'CICATRICES', 'ARRUGAS', 'TELANGIECTASIAS', 'LENTIGOS'),
    PRIMARY KEY (ID_ANALISIS_ESTETICO)
);

CREATE TABLE DIAGNOSTICO_FINAL (
    ID_DIAGNOSTICO VARCHAR(100) NOT NULL,
    NECESIDADES_CUTANEAS VARCHAR(200) NOT NULL,
    TRATAMIENTO_RECOMENTADO VARCHAR(200) NOT NULL,
    PRIMARY KEY (ID_DIAGNOSTICO)
);

CREATE TABLE CONTROL_TRATAMIENTO (
    ID_CONTROL_TRATAMIENTO VARCHAR(100) NOT NULL,
	FECHA VARCHAR(200) NOT NULL,
    TRATAMIENTO_REALIZADO TEXT,
    ABONO VARCHAR(200) NOT NULL,
    SALDO INT NOT NULL,
    PRIMARY KEY (ID_CONTROL_TRATAMIENTO)
);

CREATE TABLE FICHA_MEDICA_FACIAL (
    ID_FICHA_MEDICA_FACIAL INT NOT NULL AUTO_INCREMENT,
    CEDULA_CLIENTE INT NOT NULL,
    CEDULA_PERSONAL INT NOT NULL,
	ID_SALA INT NOT NULL,
    ID_RESERVA INT NOT NULL, -- AÃ‘ADIDO
    ID_DATOS VARCHAR(100) NOT NULL,
    ID_ENFERMEDADES_PERSONALES VARCHAR(100) NOT NULL,
    ID_PROTESIS VARCHAR(100),
    ID_HABITOS_ALIMENTICIOS VARCHAR(100) NOT NULL,
	ID_ANALISIS_ESTETICO VARCHAR(100) NOT NULL,
	ID_DIAGNOSTICO VARCHAR(100) NOT NULL,
    ID_CONTROL_TRATAMIENTO VARCHAR(100), 
    PRIMARY KEY (ID_FICHA_MEDICA_FACIAL),
    CONSTRAINT FK_CLIE FOREIGN KEY (CEDULA_CLIENTE)
        REFERENCES CLIENTES (CEDULA_CLIENTE),
    CONSTRAINT FK_PERSONAL FOREIGN KEY (CEDULA_PERSONAL)
        REFERENCES PERSONAL (CEDULA_PERSONAL),
	CONSTRAINT FK_SALA FOREIGN KEY (ID_SALA)
        REFERENCES SALA (ID_SALA),
	CONSTRAINT FK_RESERVAF FOREIGN KEY (ID_RESERVA)
        REFERENCES RESERVAS (ID_RESERVA),
    CONSTRAINT FK_DATOSSS FOREIGN KEY (ID_DATOS)
        REFERENCES DATOS_CLINICOS (ID_DATOS),
	CONSTRAINT FK_ENFERMEDADES_PERSONALES FOREIGN KEY (ID_ENFERMEDADES_PERSONALES)
        REFERENCES ENFERMEDADES_PERSONALES (ID_ENFERMEDADES_PERSONALES), 
	CONSTRAINT FK_PROTESIS FOREIGN KEY (ID_PROTESIS)
        REFERENCES USO_PROTESIS (ID_PROTESIS),
	CONSTRAINT FK_HABITOS_ALIMENTICIOS  FOREIGN KEY (ID_HABITOS_ALIMENTICIOS)
        REFERENCES HABITOS_ALIMENTICIOS  (ID_HABITOS_ALIMENTICIOS),
        	CONSTRAINT FK_ID_ANALISIS_ESTETICO  FOREIGN KEY (ID_ANALISIS_ESTETICO )
        REFERENCES ANALISIS_ESTETICO (ID_ANALISIS_ESTETICO ),
	CONSTRAINT FK_DIAGNOSTICO FOREIGN KEY (ID_DIAGNOSTICO)
        REFERENCES DIAGNOSTICO_FINAL (ID_DIAGNOSTICO),
	CONSTRAINT FK_CONTROL_TRATAMIENTO FOREIGN KEY (ID_CONTROL_TRATAMIENTO)
        REFERENCES CONTROL_TRATAMIENTO (ID_CONTROL_TRATAMIENTO)
);

/**-------------------------------------CREAR FICHA FACIAL PROCEDURE----------------------------------------------------------------*/

DROP PROCEDURE SP_CREAR_FICHA_FACIAL;
DELIMITER //
CREATE PROCEDURE SP_CREAR_FICHA_FACIAL(

TCEDULA_CLIENTE INT,
TCEDULA_PERSONAL INT,
TID_SALA INT,
TID_RESERVA INT,

TID_DATOS VARCHAR(100),
TDIABETES BOOLEAN,
TASMA BOOLEAN,
THIPERTENSION BOOLEAN,
TCANCER BOOLEAN,
TOTROS BOOLEAN,

TID_ENFERMEDADES_PERSONALES VARCHAR(100),
TENFERMEDADES_PADECIDA TEXT,
TENFERMEDADES_PADECIDA_ACTUAL TEXT,
TMEDICAMENTOS_TOMADO_ACTUAL TEXT,
TMETODO_PLANIFICACION_MUJER TEXT,

TID_PROTESIS VARCHAR(100),
TDENTALES BOOLEAN,
TLENTES_CONTACTO BOOLEAN,
TNINGUNO BOOLEAN,

TID_HABITOS_ALIMENTICIOS VARCHAR(100),
TALIMENTACION_ADECUADA BOOLEAN,
TAGUA BOOLEAN,
TFUMA BOOLEAN,
TALCOHOL BOOLEAN, 
TEJERCICIO BOOLEAN,
THORA_SUENO TEXT,

TID_ANALISIS_ESTETICO VARCHAR(100),
TCOLOR_PIEL VARCHAR(100),
TTIPO_PIEL ENUM('NORMAL', 'PIEL MIXTA', 'PIEL SECA', 'PIEL GRASA', 'PIEL SENSIBLE'),
TGRADO_DESHIDRATACION ENUM('LEVE', 'MEDIO', 'ALTO'),
TPATOLOGIAS_CUTANEAS ENUM('AMPOLLAS', 'COMEDONES', 'VERRUGAS', 'CICATRICES', 'ARRUGAS', 'TELANGIECTASIAS', 'LENTIGOS'),

TID_DIAGNOSTICO VARCHAR(100),
TNECESIDADES_CUTANEAS VARCHAR(200),
TTRATAMIENTO_RECOMENTADO VARCHAR(200),

TID_CONTROL_TRATAMIENTO VARCHAR(100),
TFECHA VARCHAR(200),
TTRATAMIENTO_REALIZADO TEXT,
TABONO VARCHAR(200),
TSALDO INT
)
BEGIN 
DECLARE CCEDULA_CLIENTE INT;
DECLARE CCEDULA_PERSONAL INT;
DECLARE CSALA INT;
DECLARE MSJ VARCHAR(100);
DECLARE FRESERVA INT;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
	ROLLBACK;
SELECT 'DUPLICIDAD DE DATOS NO INSERTAR DATOS REPETIDOS';
END;

SET CCEDULA_CLIENTE = (SELECT FUN_OBTENER_CEDULA_CLIENTE(TCEDULA_CLIENTE));
SET CCEDULA_PERSONAL = (SELECT F_CEDULA_PERSONAL_F(TCEDULA_PERSONAL));
SET CSALA = (SELECT F_VER_RESERVA_INT(TID_SALA));
SET FRESERVA =(SELECT F_VER_RESERVA_INT(TID_RESERVA));

START TRANSACTION;

IF CCEDULA_CLIENTE IS NULL OR CCEDULA_PERSONAL IS NULL OR CSALA IS NULL OR FRESERVA IS NULL THEN
		SET MSJ = 'DATOS INCOMPLETOS';
SELECT MSJ;
        ROLLBACK;
ELSE
		INSERT INTO DATOS_CLINICOS 
		(ID_DATOS, DIABETES, ASMA, HIPERTENSION, CANCER, OTROS) 
		VALUES
		(TID_DATOS, TDIABETES, TASMA, THIPERTENSION,TCANCER, TOTROS);
        
		INSERT INTO ENFERMEDADES_PERSONALES  
		(ID_ENFERMEDADES_PERSONALES  , ENFERMEDADES_PADECIDA , ENFERMEDADES_PADECIDA_ACTUAL , MEDICAMENTOS_TOMADO_ACTUAL , METODO_PLANIFICACION_MUJER ) 
		VALUES
		(TID_ENFERMEDADES_PERSONALES  , TENFERMEDADES_PADECIDA , TENFERMEDADES_PADECIDA_ACTUAL , TMEDICAMENTOS_TOMADO_ACTUAL , TMETODO_PLANIFICACION_MUJER );
        
		INSERT INTO USO_PROTESIS ( ID_PROTESIS, DENTALES, LENTES_CONTACTO, NINGUNO) 
		VALUES
		(TID_PROTESIS, TDENTALES, TLENTES_CONTACTO, TNINGUNO);
        
        INSERT INTO HABITOS_ALIMENTICIOS  (ID_HABITOS_ALIMENTICIOS , ALIMENTACION_ADECUADA , AGUA , FUMA, ALCOHOL, EJERCICIO, HORA_SUENO) 
		VALUES
		(TID_HABITOS_ALIMENTICIOS , TALIMENTACION_ADECUADA , TAGUA , TFUMA, TALCOHOL, TEJERCICIO, THORA_SUENO );
        
		INSERT INTO ANALISIS_ESTETICO  ( ID_ANALISIS_ESTETICO , COLOR_PIEL , TIPO_PIEL, GRADO_DESHIDRATACION, PATOLOGIAS_CUTANEAS ) 
		VALUES
		(TID_ANALISIS_ESTETICO , TCOLOR_PIEL , TTIPO_PIEL, TGRADO_DESHIDRATACION, TPATOLOGIAS_CUTANEAS);
        
		INSERT INTO DIAGNOSTICO_FINAL ( ID_DIAGNOSTICO, NECESIDADES_CUTANEAS, TRATAMIENTO_RECOMENTADO) 
		VALUES
		(TID_DIAGNOSTICO, TNECESIDADES_CUTANEAS, TTRATAMIENTO_RECOMENTADO);
        
		INSERT INTO CONTROL_TRATAMIENTO ( ID_CONTROL_TRATAMIENTO, FECHA, TRATAMIENTO_REALIZADO, ABONO, SALDO) 
		VALUES
		(TID_CONTROL_TRATAMIENTO, TFECHA, TTRATAMIENTO_REALIZADO, TABONO, TSALDO);
        
		INSERT INTO FICHA_MEDICA_FACIAL
		(CEDULA_CLIENTE, CEDULA_PERSONAL, ID_SALA, ID_RESERVA, ID_DATOS, ID_ENFERMEDADES_PERSONALES, 
        ID_PROTESIS, ID_HABITOS_ALIMENTICIOS, ID_ANALISIS_ESTETICO, ID_DIAGNOSTICO, ID_CONTROL_TRATAMIENTO) 
		VALUES
		(TCEDULA_CLIENTE, TCEDULA_PERSONAL, TID_SALA, TID_RESERVA, TID_DATOS, TID_ENFERMEDADES_PERSONALES, 
        TID_PROTESIS, TID_HABITOS_ALIMENTICIOS, TID_ANALISIS_ESTETICO,  TID_DIAGNOSTICO, TID_CONTROL_TRATAMIENTO);
        
		COMMIT;
        
END IF;
END //
DELIMITER ;

CALL SP_CREAR_FICHA_FACIAL(
1312559824,
1312559825,
1,
1,
'DC 1',
FALSE,
FALSE,
FALSE,
FALSE,
FALSE,
'EP 1',
'NINGUNA',
'DIABETES',
'PROXIBON',
'NO',
'PROTESIS 1',
FALSE,
FALSE,
FALSE,
'HA 1',
TRUE,
TRUE,
TRUE,
TRUE,
TRUE,
'8 HORAS DIARIAS',
'A1',
'PIEL MORENA',
'PIEL GRASA',
'LEVE',
'AMPOLLAS',
'D1',
'NO',
'UNICO',
'CONTROL 1',
"2024-07-09",
'DEBE VOLVER LA PROXIMA VEZ',
80,
20);

/*----------------------------------------------ACTIVAR DISPONIBILIDAD SALA -------------------------------------------------------*/

DROP TRIGGER TG_IDISPONIBILIDAD_ACTIVAR;
DELIMITER //
CREATE TRIGGER TG_IDISPONIBILIDAD_ACTIVAR AFTER INSERT ON FICHA_MEDICA_FACIAL
FOR EACH ROW
BEGIN
	UPDATE SALA SET DISPONIBILIDAD = FALSE WHERE ID_SALA = NEW.ID_SALA;
END //
DELIMITER ;

/*--------------------------------------FINALIZADO EN RESERVAS TRIGGER-------------------------------------------------------------*/

DROP TRIGGER TG_FINALIZAR_RESERVA;
DELIMITER //
CREATE TRIGGER TG_FINALIZAR_RESERVA AFTER INSERT ON FICHA_MEDICA_FACIAL
FOR EACH ROW
BEGIN
	UPDATE RESERVAS SET FINZALIZADO = TRUE WHERE ID_RESERVA = NEW.ID_RESERVA;
END //
DELIMITER ;

/*-------------------------------------VER FICHA MEDICA CON CEDULA CLIENTE---------------------------------------------------------*/
DROP PROCEDURE SP_VER_FICHA_MEDICA_CLIENTE;
DELIMITER //
CREATE PROCEDURE SP_VER_FICHA_MEDICA_CLIENTE (
IN T_CEDULA INT
)
BEGIN 
START TRANSACTION;
		SELECT F.CEDULA_CLIENTE, 
		C.NOMBRE_CLIENTE,  C.APELLIDO_CLIENTE, C.TELEFONO_CLIENTE, C.CORREO, C.DIRECCION,
		D.DIABETES, D.ASMA, D.HIPERTENSION, D.CANCER, D.OTROS,
		E.ENFERMEDADES_PADECIDA, E.ENFERMEDADES_PADECIDA_ACTUAL, E.MEDICAMENTOS_TOMADO_ACTUAL, E.METODO_PLANIFICACION_MUJER,
		UP.DENTALES, UP.LENTES_CONTACTO, UP.NINGUNO,
		HB.ALIMENTACION_ADECUADA, HB.AGUA, HB.FUMA, HB.ALCOHOL, HB.EJERCICIO, HB.HORA_SUENO,
		AE.COLOR_PIEL, AE.TIPO_PIEL, AE.GRADO_DESHIDRATACION, AE.PATOLOGIAS_CUTANEAS,
		DF.NECESIDADES_CUTANEAS, DF.TRATAMIENTO_RECOMENTADO,
		CT.FECHA, CT.TRATAMIENTO_REALIZADO, CT.ABONO, CT.SALDO
		FROM FICHA_MEDICA_FACIAL AS F
		INNER JOIN CLIENTES AS C
		ON F.CEDULA_CLIENTE = C.CEDULA_CLIENTE
		INNER JOIN DATOS_CLINICOS AS D 
		ON F.ID_DATOS = D.ID_DATOS
		INNER JOIN ENFERMEDADES_PERSONALES AS E 
		ON F.ID_ENFERMEDADES_PERSONALES = E.ID_ENFERMEDADES_PERSONALES
		INNER JOIN USO_PROTESIS AS UP 
		ON F.ID_PROTESIS = UP.ID_PROTESIS
		INNER JOIN HABITOS_ALIMENTICIOS AS HB 
		ON F.ID_HABITOS_ALIMENTICIOS = HB.ID_HABITOS_ALIMENTICIOS
		INNER JOIN ANALISIS_ESTETICO AS AE 
		ON F.ID_ANALISIS_ESTETICO = AE.ID_ANALISIS_ESTETICO
		INNER JOIN DIAGNOSTICO_FINAL AS DF 
		ON F.ID_DIAGNOSTICO = DF.ID_DIAGNOSTICO
		INNER JOIN CONTROL_TRATAMIENTO AS CT 
		ON F.ID_CONTROL_TRATAMIENTO = CT.ID_CONTROL_TRATAMIENTO
        WHERE F.CEDULA_CLIENTE= T_CEDULA;
COMMIT;
END //
DELIMITER ;
CALL SP_VER_FICHA_MEDICA_CLIENTE(1312559824);

/*------------------------------------------VER FICHA MEDICA TODAS---------------------------------------------------------------*/

DROP PROCEDURE SP_VER_FICHA_MEDICA_CLIENTE_TODAS;
DELIMITER //
CREATE PROCEDURE SP_VER_FICHA_MEDICA_CLIENTE_TODAS (
IN T_CEDULA INT
)
BEGIN 
DECLARE CI INT;
SET CI = (SELECT FUN_OBTENER_CEDULA_CLIENTE(T_CEDULA));
START TRANSACTION;
	IF CI IS NULL THEN
		SELECT F.CEDULA_CLIENTE, 
		C.NOMBRE_CLIENTE,  C.APELLIDO_CLIENTE, C.TELEFONO_CLIENTE, C.CORREO, C.DIRECCION,
		D.DIABETES, D.ASMA, D.HIPERTENSION, D.CANCER, D.OTROS,
		E.ENFERMEDADES_PADECIDA, E.ENFERMEDADES_PADECIDA_ACTUAL, E.MEDICAMENTOS_TOMADO_ACTUAL, E.METODO_PLANIFICACION_MUJER,
		UP.DENTALES, UP.LENTES_CONTACTO, UP.NINGUNO,
		HB.ALIMENTACION_ADECUADA, HB.AGUA, HB.FUMA, HB.ALCOHOL, HB.EJERCICIO, HB.HORA_SUENO,
		AE.COLOR_PIEL, AE.TIPO_PIEL, AE.GRADO_DESHIDRATACION, AE.PATOLOGIAS_CUTANEAS,
		DF.NECESIDADES_CUTANEAS, DF.TRATAMIENTO_RECOMENTADO,
		CT.FECHA, CT.TRATAMIENTO_REALIZADO, CT.ABONO, CT.SALDO
		FROM FICHA_MEDICA_FACIAL AS F
		INNER JOIN CLIENTES AS C
		ON F.CEDULA_CLIENTE = C.CEDULA_CLIENTE
		INNER JOIN DATOS_CLINICOS AS D 
		ON F.ID_DATOS = D.ID_DATOS
		INNER JOIN ENFERMEDADES_PERSONALES AS E 
		ON F.ID_ENFERMEDADES_PERSONALES = E.ID_ENFERMEDADES_PERSONALES
		INNER JOIN USO_PROTESIS AS UP 
		ON F.ID_PROTESIS = UP.ID_PROTESIS
		INNER JOIN HABITOS_ALIMENTICIOS AS HB 
		ON F.ID_HABITOS_ALIMENTICIOS = HB.ID_HABITOS_ALIMENTICIOS
		INNER JOIN ANALISIS_ESTETICO AS AE 
		ON F.ID_ANALISIS_ESTETICO = AE.ID_ANALISIS_ESTETICO
		INNER JOIN DIAGNOSTICO_FINAL AS DF 
		ON F.ID_DIAGNOSTICO = DF.ID_DIAGNOSTICO
		INNER JOIN CONTROL_TRATAMIENTO AS CT 
		ON F.ID_CONTROL_TRATAMIENTO = CT.ID_CONTROL_TRATAMIENTO;
        COMMIT;
	ELSE 
		SELECT F.CEDULA_CLIENTE, 
		C.NOMBRE_CLIENTE,  C.APELLIDO_CLIENTE, C.TELEFONO_CLIENTE, C.CORREO, C.DIRECCION,
		D.DIABETES, D.ASMA, D.HIPERTENSION, D.CANCER, D.OTROS,
		E.ENFERMEDADES_PADECIDA, E.ENFERMEDADES_PADECIDA_ACTUAL, E.MEDICAMENTOS_TOMADO_ACTUAL, E.METODO_PLANIFICACION_MUJER,
		UP.DENTALES, UP.LENTES_CONTACTO, UP.NINGUNO,
		HB.ALIMENTACION_ADECUADA, HB.AGUA, HB.FUMA, HB.ALCOHOL, HB.EJERCICIO, HB.HORA_SUENO,
		AE.COLOR_PIEL, AE.TIPO_PIEL, AE.GRADO_DESHIDRATACION, AE.PATOLOGIAS_CUTANEAS,
		DF.NECESIDADES_CUTANEAS, DF.TRATAMIENTO_RECOMENTADO,
		CT.FECHA, CT.TRATAMIENTO_REALIZADO, CT.ABONO, CT.SALDO
		FROM FICHA_MEDICA_FACIAL AS F
		INNER JOIN CLIENTES AS C
		ON F.CEDULA_CLIENTE = C.CEDULA_CLIENTE
		INNER JOIN DATOS_CLINICOS AS D 
		ON F.ID_DATOS = D.ID_DATOS
		INNER JOIN ENFERMEDADES_PERSONALES AS E 
		ON F.ID_ENFERMEDADES_PERSONALES = E.ID_ENFERMEDADES_PERSONALES
		INNER JOIN USO_PROTESIS AS UP 
		ON F.ID_PROTESIS = UP.ID_PROTESIS
		INNER JOIN HABITOS_ALIMENTICIOS AS HB 
		ON F.ID_HABITOS_ALIMENTICIOS = HB.ID_HABITOS_ALIMENTICIOS
		INNER JOIN ANALISIS_ESTETICO AS AE 
		ON F.ID_ANALISIS_ESTETICO = AE.ID_ANALISIS_ESTETICO
		INNER JOIN DIAGNOSTICO_FINAL AS DF 
		ON F.ID_DIAGNOSTICO = DF.ID_DIAGNOSTICO
		INNER JOIN CONTROL_TRATAMIENTO AS CT 
		ON F.ID_CONTROL_TRATAMIENTO = CT.ID_CONTROL_TRATAMIENTO
        WHERE F.CEDULA_CLIENTE= T_CEDULA;
        COMMIT;
	END IF;
COMMIT;
END //
DELIMITER ;
CALL SP_VER_FICHA_MEDICA_CLIENTE_TODAS(1312559824);

/*-------------------------------------ACTUALIZAR ABONO_SALDO ---------------------------------------------------------*/

DROP PROCEDURE SP_EDITAR_ABONO_SALDO;
DELIMITER //
CREATE PROCEDURE SP_EDITAR_ABONO_SALDO (
IN T_USUARIO INT,
IN T_FICHA INT,
IN TABONO INT,
IN TSALDO INT
)
BEGIN 
DECLARE IUSUARIO INT;
DECLARE IFICHA INT;
DECLARE MSJ VARCHAR(100);
SET IUSUARIO = (SELECT FUN_OBTENER_CEDULA_CLIENTE(T_USUARIO));
SET IFICHA = (SELECT FUN_OBTENER_ID_FICHA_MEDICA(T_FICHA));
START TRANSACTION;
	IF IUSUARIO IS NULL THEN
		SET MSJ = 'DEBE UBICAR CORRECTAMENTE EL CAMPO CEDULA';
		SELECT MSJ;
		ROLLBACK;
	ELSEIF  IFICHA IS NULL THEN
		SET MSJ = 'DEBE UBICAR CORRECTAMENTE EL CAMPO ID FICHA';
		SELECT MSJ;
		ROLLBACK;
	ELSE
		UPDATE CONTROL_TRATAMIENTO CT 
		INNER JOIN FICHA_MEDICA_FACIAL AS F ON CT.ID_CONTROL_TRATAMIENTO = F.ID_CONTROL_TRATAMIENTO
		SET CT.ABONO = TABONO, CT.SALDO = TSALDO
		WHERE F.ID_FICHA_MEDICA_FACIAL = T_FICHA AND CEDULA_CLIENTE = T_USUARIO;
		COMMIT;
	END IF;
END //
DELIMITER ;
CALL SP_EDITAR_ABONO_SALDO(1312559824, 1 , 100, 0);

/*---------------------------------------FUNCION PARA VALIDAR ID FICHA MEDICA -------------------------------------------------*/
DROP FUNCTION  IF EXISTS FUN_OBTENER_ID_FICHA_MEDICA;
DELIMITER //
CREATE FUNCTION FUN_OBTENER_ID_FICHA_MEDICA(F_FICHA INT)
RETURNS INT DETERMINISTIC
BEGIN
	RETURN (SELECT ID_FICHA_MEDICA_FACIAL FROM FICHA_MEDICA_FACIAL WHERE ID_FICHA_MEDICA_FACIAL = F_FICHA);
END //
DELIMITER ;
SELECT FUN_OBTENER_ID_FICHA_MEDICA(1);
